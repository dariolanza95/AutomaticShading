OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2.pixar1697a56
# options: 
shader textures_test
param	point	Pobj	0 0 0		%meta{int,lockgeom,0}  %read{0,0} %write{2147483647,-1} %derivs
oparam	float	resultF	0		%read{2147483647,-1} %write{11,11}
oparam	color	resultRGB	0 0 0		%read{2147483647,-1} %write{19,22}
local	point	pp	%read{9,9} %write{0,0} %derivs
local	color[8]	hardness_colors	%read{22,22} %write{1,8}
local	color	res	%read{10,10} %write{9,9}
local	float	val	%read{11,20} %write{10,10}
local	int	___325_index	%read{22,22} %write{21,21}
const	color	$const1	0 0 0		%read{1,19} %write{2147483647,-1}
const	int	$const2	0		%read{1,16} %write{2147483647,-1}
const	color	$const3	1 0 1		%read{2,2} %write{2147483647,-1}
const	int	$const4	1		%read{2,2} %write{2147483647,-1}
const	color	$const5	1 0 0		%read{3,3} %write{2147483647,-1}
const	int	$const6	2		%read{3,3} %write{2147483647,-1}
const	color	$const7	0 1 1		%read{4,4} %write{2147483647,-1}
const	int	$const8	3		%read{4,4} %write{2147483647,-1}
const	color	$const9	1 1 0		%read{5,5} %write{2147483647,-1}
const	int	$const10	4		%read{5,5} %write{2147483647,-1}
const	color	$const11	0 0 1		%read{6,6} %write{2147483647,-1}
const	int	$const12	5		%read{6,6} %write{2147483647,-1}
const	color	$const13	0 1 0		%read{7,7} %write{2147483647,-1}
const	int	$const14	6		%read{7,7} %write{2147483647,-1}
const	color	$const15	1 1 1		%read{8,8} %write{2147483647,-1}
const	int	$const16	7		%read{8,8} %write{2147483647,-1}
const	string	$const17	"brickmap01"		%read{9,9} %write{2147483647,-1}
temp	int	$tmp9	%read{13,13} %write{12,12}
temp	int	$tmp10	%read{14,18} %write{13,17}
const	int	$const18	8		%read{15,15} %write{2147483647,-1}
temp	int	$tmp11	%read{16,16} %write{15,15}
temp	int	$tmp12	%read{17,17} %write{16,16}
temp	float	$tmp13	%read{21,21} %write{20,20}
code ___main___
# textures_test.osl:12
# 	point pp = Pobj;
	assign		pp Pobj 	%filename{"textures_test.osl"} %line{12} %argrw{"wr"}
# textures_test.osl:16
# hardness_colors[0] = color(0,0,0);
	aassign		hardness_colors $const2 $const1 	%line{16} %argrw{"wrr"}
# textures_test.osl:17
# hardness_colors[1] = color(1,0,1);
	aassign		hardness_colors $const4 $const3 	%line{17} %argrw{"wrr"}
# textures_test.osl:18
# hardness_colors[2] = color(1,0,0);
	aassign		hardness_colors $const6 $const5 	%line{18} %argrw{"wrr"}
# textures_test.osl:19
# hardness_colors[3] = color(0,1,1);
	aassign		hardness_colors $const8 $const7 	%line{19} %argrw{"wrr"}
# textures_test.osl:20
# hardness_colors[4] = color(1,1,0);
	aassign		hardness_colors $const10 $const9 	%line{20} %argrw{"wrr"}
# textures_test.osl:21
# hardness_colors[5] = color(0,0,1);
	aassign		hardness_colors $const12 $const11 	%line{21} %argrw{"wrr"}
# textures_test.osl:22
# hardness_colors[6] = color(0,1,0);
	aassign		hardness_colors $const14 $const13 	%line{22} %argrw{"wrr"}
# textures_test.osl:23
# hardness_colors[7] = color(1,1,1);
	aassign		hardness_colors $const16 $const15 	%line{23} %argrw{"wrr"}
# textures_test.osl:27
# 	color res  = texture3d("brickmap01",pp);
	texture3d	res $const17 pp 	%line{27} %argrw{"wrr"} %argderivs{2}
# textures_test.osl:28
# 	float val = res[0];
	compref		val res $const2 	%line{28} %argrw{"wrr"}
# textures_test.osl:29
# 	resultF = val;
	assign		resultF val 	%line{29} %argrw{"wr"}
# textures_test.osl:30
# 	if(val<0 || val>8)
	lt		$tmp9 val $const2 	%line{30} %argrw{"wrr"}
	neq		$tmp10 $tmp9 $const2 	%argrw{"wrr"}
	if		$tmp10 15 18 	%argrw{"r"}
	gt		$tmp11 val $const18 	%argrw{"wrr"}
	neq		$tmp12 $tmp11 $const2 	%argrw{"wrr"}
	assign		$tmp10 $tmp12 	%argrw{"wr"}
	if		$tmp10 20 23 	%argrw{"r"}
# textures_test.osl:32
# 		resultRGB = color(0,0,0);
	assign		resultRGB $const1 	%line{32} %argrw{"wr"}
# textures_test.osl:34
# 		int index = (int) round(val);
	round		$tmp13 val 	%line{34} %argrw{"wr"}
	assign		___325_index $tmp13 	%argrw{"wr"}
# textures_test.osl:35
# 		resultRGB = hardness_colors[index];
	aref		resultRGB hardness_colors ___325_index 	%line{35} %argrw{"wrr"}
	end
